package residueCoding;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;

import entropyEncoder.EntropyEncoderHevc;
import entropyEncoder.State;

public class Main {
	public static void main(String[] args){
		
		ArrayList<int[]> coefArray = new ArrayList<>();
		ArrayList<int[]> typeAndWidthAndExist = new ArrayList<>();
		
		coefArray.add(new int[]{-31,-31,-31,-30,-29,-29,-28,-27,-26,-25,-24,-24,-23,-22,-22,-22,-22,-22,-22,-23,-24,-24,-25,-26,-27,-28,-29,-29,-30,-31,-31,-31,-29,-29,-29,-29,-28,-28,-27,-27,-27,-26,-26,-25,-25,-25,-24,-24,-24,-24,-25,-25,-25,-26,-26,-27,-27,-27,-28,-28,-29,-29,-29,-29,-27,-27,-27,-27,-27,-27,-27,-27,-27,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-27,-27,-27,-27,-27,-27,-27,-26,-26,-25,-25,-25,-25,-26,-26,-27,-28,-29,-29,-30,-31,-31,-31,-32,-32,-32,-32,-31,-31,-31,-30,-29,-29,-28,-27,-26,-26,-25,-25,-24,-24,-24,-24,-25,-25,-26,-27,-28,-29,-30,-31,-32,-32,-33,-34,-34,-34,-34,-34,-34,-33,-32,-32,-31,-30,-29,-28,-27,-26,-25,-24,-24,-23,-26,-26,-27,-27,-28,-28,-29,-30,-31,-31,-32,-33,-33,-34,-34,-34,-34,-34,-34,-33,-33,-32,-31,-31,-30,-29,-28,-28,-27,-26,-26,-25,-30,-30,-30,-30,-30,-31,-31,-31,-31,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-30,-30,-30,-29,-29,-34,-34,-34,-34,-33,-33,-33,-32,-32,-32,-31,-31,-30,-30,-30,-30,-30,-30,-30,-30,-31,-31,-32,-32,-32,-33,-33,-33,-34,-34,-33,-33,-37,-37,-37,-36,-36,-35,-34,-33,-32,-32,-31,-30,-29,-29,-28,-28,-28,-28,-29,-29,-30,-31,-32,-32,-33,-34,-35,-36,-36,-36,-36,-35,-38,-38,-38,-37,-36,-36,-35,-34,-33,-32,-31,-30,-30,-29,-29,-28,-28,-29,-29,-30,-30,-31,-32,-33,-34,-35,-36,-36,-37,-37,-37,-36,-36,-36,-36,-36,-35,-35,-34,-34,-33,-33,-32,-32,-31,-31,-31,-31,-31,-31,-31,-31,-32,-32,-33,-33,-34,-34,-35,-35,-36,-35,-35,-34,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-33,-33,-33,-33,-33,-33,-33,-32,-31,-30,-30,-30,-30,-30,-31,-31,-32,-33,-33,-34,-35,-35,-36,-36,-36,-36,-36,-36,-36,-36,-35,-35,-34,-33,-33,-32,-31,-31,-30,-29,-28,-27,-27,-28,-28,-29,-29,-30,-31,-32,-33,-34,-35,-36,-36,-37,-37,-37,-37,-37,-37,-36,-36,-35,-34,-33,-32,-31,-30,-29,-29,-27,-25,-24,-27,-27,-28,-28,-29,-29,-30,-31,-32,-33,-34,-34,-35,-35,-36,-36,-36,-36,-35,-35,-34,-34,-33,-32,-31,-30,-29,-29,-28,-26,-25,-24,-29,-29,-29,-29,-29,-30,-30,-30,-31,-31,-31,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-30,-30,-30,-29,-29,-28,-26,-25,-31,-31,-31,-31,-31,-30,-30,-30,-29,-29,-29,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-29,-29,-29,-30,-30,-30,-31,-31,-30,-28,-27,-33,-33,-32,-32,-31,-31,-30,-29,-28,-27,-26,-26,-25,-25,-24,-24,-24,-24,-25,-25,-26,-26,-27,-28,-29,-30,-31,-31,-32,-31,-30,-29,-33,-32,-32,-31,-31,-30,-29,-28,-27,-26,-25,-24,-24,-23,-23,-23,-23,-23,-23,-24,-24,-25,-26,-27,-28,-29,-30,-31,-31,-31,-30,-28,-30,-30,-30,-30,-29,-29,-28,-27,-27,-26,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-25,-25,-26,-27,-27,-28,-29,-29,-30,-29,-27,-26,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-27,-27,-27,-27,-27,-27,-27,-26,-24,-23,-24,-24,-24,-24,-25,-25,-26,-26,-27,-27,-28,-28,-29,-29,-29,-29,-29,-29,-29,-29,-28,-28,-27,-27,-26,-26,-25,-25,-24,-23,-22,-21,-22,-22,-22,-23,-24,-24,-25,-26,-27,-28,-29,-30,-30,-31,-31,-32,-32,-31,-31,-30,-30,-29,-28,-27,-26,-25,-24,-24,-23,-21,-20,-19,-23,-23,-23,-24,-24,-25,-26,-27,-28,-28,-29,-30,-31,-31,-31,-32,-32,-31,-31,-31,-30,-29,-28,-28,-27,-26,-25,-24,-24,-22,-21,-20,-26,-26,-26,-26,-27,-27,-27,-28,-28,-28,-29,-29,-30,-30,-30,-30,-30,-30,-30,-30,-29,-29,-28,-28,-28,-27,-27,-27,-26,-25,-24,-24,-30,-30,-30,-30,-30,-29,-29,-29,-29,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-29,-29,-29,-29,-30,-30,-29,-29,-28,-34,-34,-33,-33,-32,-32,-31,-30,-29,-29,-28,-27,-27,-26,-26,-26,-26,-26,-26,-27,-27,-28,-29,-29,-30,-31,-32,-32,-33,-33,-33,-33,-36,-36,-35,-35,-34,-33,-32,-31,-30,-29,-28,-28,-27,-26,-26,-26,-26,-26,-26,-27,-28,-28,-29,-30,-31,-32,-33,-34,-35,-35,-35,-35,-35,-35,-35,-35,-34,-34,-33,-32,-31,-31,-30,-29,-29,-29,-28,-28,-28,-28,-29,-29,-29,-30,-31,-31,-32,-33,-34,-34,-35,-35,-35,-35,-33,-33,-33,-33,-33,-33,-33,-33,-33,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-32,-33,-33,-33,-34,-33,-34,-34,-35,-35,-36,-37,-37,-38,-38,-37,-37,-37,-36,-35,-34,-34,-33,-31,-31,-29,-29,-29,-29,-32,-32,-32,-32,-33,-33,-34,-34,-34,-35,-36,-37,-38,-39,-40,-41,-42,-42,-42,-41,-40,-39,-37,-35,-34,-32,-29,-28,-26,-25,-25,-25});
		coefArray.add(new int[]{-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19});
		coefArray.add(new int[]{});
		
		coefArray.add(new int[]{-1,-1,-1,0,0,0,0,1,1,1,2,2,2,3,3,4,4,5,5,6,6,6,7,7,7,8,8,8,8,8,7,6,1,1,1,1,1,2,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,6,7,7,6,5,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,2,1,5,6,6,6,6,6,6,6,6,5,5,5,5,5,4,4,4,4,3,3,3,3,3,2,2,2,2,2,2,1,1,0,6,7,7,7,7,7,6,6,6,6,6,5,5,5,4,4,4,4,3,3,3,2,2,2,2,2,1,1,1,1,0,0,4,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,2,2,1,1,1,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,4,4,5,5,5,5,5,5,6,6,6,6,5,4,3,-3,-2,-2,-1,-1,-1,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,8,9,9,9,8,8,7,-5,-5,-4,-4,-3,-3,-3,-2,-1,-1,0,1,1,2,3,4,4,5,6,7,7,8,9,9,10,11,11,11,12,11,10,9,-6,-5,-5,-4,-3,-3,-3,-2,-2,-1,0,1,1,2,3,4,4,5,6,7,7,8,9,10,10,11,11,11,12,11,10,9,-4,-3,-2,-1,-1,-1,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,8,9,9,9,8,8,7,0,1,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,4,4,3,4,5,6,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2,1,1,1,1,0,0,7,8,9,10,9,9,9,8,8,8,7,7,6,5,5,4,4,3,3,2,1,1,0,0,0,-1,-1,-1,-2,-2,-2,-2,8,9,10,11,10,10,10,9,9,8,8,7,6,6,5,4,4,3,2,2,1,0,0,-1,-1,-2,-2,-2,-3,-3,-3,-2,6,8,9,10,9,9,9,8,8,8,7,7,6,5,5,4,4,3,3,2,1,1,0,0,0,-1,-1,-1,-2,-2,-2,-2,4,6,7,8,8,7,7,7,7,6,6,6,5,5,5,4,4,3,3,3,2,2,2,1,1,1,1,0,0,0,0,0,3,4,5,6,6,6,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2,2,2,2,1,1,1,3,4,6,7,7,6,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2,2,1,1,1,1,1,5,7,8,9,8,8,8,8,7,7,6,6,6,5,5,4,4,3,3,2,2,2,1,1,0,0,0,0,-1,-1,-1,0,8,10,11,11,11,11,10,10,9,9,8,7,7,6,5,4,4,3,2,1,1,0,-1,-1,-2,-2,-3,-3,-3,-4,-4,-3,11,12,13,14,13,13,12,12,11,10,9,8,8,7,5,4,4,3,1,0,0,-1,-2,-3,-4,-4,-5,-5,-6,-6,-6,-5,12,13,14,14,14,13,13,12,11,11,10,9,8,7,6,4,4,2,1,0,-1,-2,-3,-3,-4,-5,-5,-6,-6,-7,-6,-5,10,11,12,13,12,12,11,11,10,9,9,8,7,6,5,4,4,3,2,1,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-4,-3,7,7,8,8,8,8,8,7,7,7,6,6,6,5,5,4,4,3,3,2,2,2,1,1,1,0,0,0,0,0,0,0,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,4,4,-3,-3,-2,-2,-2,-1,-1,-1,0,0,1,1,2,2,3,4,4,5,6,6,7,7,8,8,9,9,9,10,10,10,9,9,-6,-5,-5,-5,-4,-4,-4,-3,-2,-2,-1,0,1,2,3,4,4,5,6,7,8,9,10,10,11,12,12,12,13,13,12,11,-6,-6,-6,-5,-5,-5,-4,-3,-3,-2,-1,0,1,2,3,4,4,5,6,7,8,9,10,11,11,12,13,13,13,14,13,12,-5,-5,-5,-4,-3,-3,-2,-2,-1,-1,0,1,1,2,3,4,4,5,6,7,8,8,9,10,11,11,12,12,12,13,12,11,-2,-3,-3,-2,-1,-1,-1,-1,0,0,1,1,2,3,3,4,5,6,7,8,8,8,8,9,9,9,10,9,9,10,9,9,2,0,-1,0,-1,-1,0,0,0,1,1,1,2,3,3,4,5,6,7,8,8,8,8,8,7,7,8,7,7,7,6,6});
		coefArray.add(new int[]{});
		coefArray.add(new int[]{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1});

		coefArray.add(new int[]{0,0,0,0,-1,-1,-2,-2,-3,-4,-5,-5,-7,-8,-9,-9,-9,-9,-9,-8,-7,-6,-5,-3,0,2,4,5,7,9,9,9,-1,-1,-1,-1,-1,-2,-2,-3,-4,-5,-6,-5,-6,-6,-6,-6,-5,-5,-4,-3,-3,-2,-1,0,1,2,3,3,4,5,5,5,-1,-1,-2,-2,-2,-3,-3,-4,-5,-5,-5,-5,-4,-3,-2,-1,0,1,2,3,3,3,4,3,3,2,1,1,0,-1,0,0,-2,-2,-2,-3,-3,-4,-4,-4,-4,-4,-3,-2,0,1,3,5,7,8,9,9,9,9,8,6,4,2,0,-2,-4,-6,-6,-5,-4,-4,-4,-4,-4,-3,-3,-2,-1,0,1,3,4,6,8,9,10,11,11,11,11,10,8,7,4,2,0,-2,-4,-6,-5,-4,-7,-7,-6,-5,-4,-3,-1,1,2,4,5,6,8,8,9,9,9,9,9,8,7,7,6,5,4,3,2,1,1,0,0,1,-8,-8,-7,-5,-4,-2,0,2,4,5,7,7,8,8,7,6,6,5,4,3,3,2,2,3,3,4,5,6,7,8,8,8,-7,-7,-6,-5,-3,-2,0,1,3,4,4,5,4,4,3,3,2,1,0,0,0,0,1,2,4,5,7,9,10,11,11,11,-4,-4,-3,-3,-3,-2,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,1,2,3,4,5,6,7,8,9,10,10,9,0,0,-1,-2,-2,-3,-4,-5,-5,-6,-6,-5,-5,-4,-3,-2,-1,0,1,2,3,4,5,5,5,5,5,5,4,4,4,4,1,1,0,-1,-2,-4,-5,-6,-7,-7,-7,-7,-6,-5,-4,-2,0,1,3,4,5,5,5,5,4,3,2,0,-1,-1,-1,0,0,0,-1,-2,-3,-3,-4,-5,-6,-6,-6,-6,-5,-4,-3,-2,-1,0,1,2,3,3,3,2,1,0,-1,-2,-3,-3,-2,-1,-3,-3,-3,-3,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,-1,-1,0,0,0,0,0,1,-5,-5,-4,-3,-3,-2,-1,0,0,1,1,0,0,-1,-2,-3,-4,-5,-5,-5,-5,-5,-4,-2,-1,1,3,5,6,7,7,8,-4,-4,-4,-3,-2,-1,-1,0,0,1,0,0,-1,-2,-3,-4,-5,-5,-6,-5,-5,-3,-2,0,3,5,8,11,13,15,14,14,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-3,-3,-3,-3,-3,-2,-1,0,1,3,5,7,9,11,13,15,17,18,17,16,0,0,-1,-1,-2,-2,-3,-4,-4,-4,-4,-3,-3,-2,-1,1,2,4,6,8,9,11,12,14,14,15,16,16,16,17,16,16,1,1,1,0,-1,-2,-2,-3,-3,-3,-2,-1,1,2,5,7,9,11,13,15,16,17,17,17,16,15,14,13,11,10,10,9,1,1,1,1,1,1,1,1,2,3,5,6,8,10,11,13,15,16,17,17,17,16,15,14,12,10,7,5,3,2,1,0,1,2,2,3,4,6,7,9,10,11,13,14,15,16,16,16,16,15,14,13,11,9,7,5,3,1,-1,-3,-5,-6,-7,-7,5,5,6,8,9,11,13,15,17,18,19,19,19,18,16,14,12,10,7,4,2,-1,-4,-6,-7,-9,-10,-11,-11,-12,-12,-12,11,11,12,13,14,16,17,18,18,18,18,17,15,13,10,7,4,1,-2,-6,-8,-11,-13,-14,-15,-16,-16,-16,-16,-16,-16,-16,18,18,18,18,17,17,16,15,14,12,10,8,5,3,0,-3,-6,-8,-11,-13,-15,-16,-17,-18,-19,-19,-19,-19,-18,-18,-18,-18,21,21,19,18,15,13,10,7,4,1,-2,-5,-7,-9,-11,-13,-14,-15,-16,-16,-16,-17,-17,-18,-18,-18,-18,-18,-18,-19,-19,-18,16,15,13,11,8,5,1,-3,-6,-9,-13,-15,-17,-18,-19,-19,-19,-18,-18,-17,-16,-16,-15,-15,-15,-16,-16,-17,-17,-17,-17,-17,3,2,1,-1,-3,-6,-9,-11,-14,-16,-18,-20,-20,-21,-21,-20,-19,-19,-17,-16,-15,-14,-14,-13,-13,-13,-14,-14,-14,-15,-15,-15,-14,-14,-14,-15,-15,-16,-16,-17,-17,-18,-18,-19,-19,-19,-18,-18,-18,-17,-17,-16,-16,-15,-15,-14,-14,-13,-13,-13,-12,-12,-12,-12,-27,-26,-26,-25,-23,-22,-20,-19,-17,-16,-15,-15,-14,-14,-15,-15,-16,-16,-16,-17,-17,-17,-17,-16,-15,-14,-13,-12,-12,-11,-10,-10,-31,-31,-29,-28,-25,-23,-21,-18,-16,-15,-13,-12,-12,-12,-12,-13,-14,-15,-16,-17,-18,-18,-18,-18,-17,-16,-15,-14,-13,-12,-12,-12,-26,-26,-25,-24,-22,-21,-19,-17,-16,-15,-14,-13,-13,-13,-13,-14,-15,-16,-17,-18,-18,-18,-19,-19,-18,-18,-18,-17,-17,-17,-17,-17,-20,-20,-20,-19,-19,-20,-19,-18,-18,-18,-17,-17,-16,-16,-16,-16,-17,-17,-18,-18,-18,-19,-19,-20,-20,-21,-21,-22,-22,-23,-23,-23,-14,-15,-16,-16,-17,-19,-19,-19,-19,-20,-19,-19,-18,-18,-18,-18,-18,-18,-19,-19,-19,-20,-20,-21,-22,-23,-24,-26,-27,-27,-27,-27});
		coefArray.add(new int[]{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,10,10,10,10,10,10,10,9,8,7,7,7,7,6,6,4});
		coefArray.add(new int[]{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2});
		
		coefArray.add(new int[]{5,4,3,2,2,2,3,3,3,3,3,3,3,5,6,7,8,9,10,11,10,10,9,10,9,8,8,8,7,6,5,5,3,3,3,2,3,3,3,3,3,3,3,3,3,5,6,7,9,10,11,12,11,11,10,10,9,8,8,7,6,6,5,5,-1,1,3,3,3,3,3,3,3,3,3,3,3,5,6,7,10,11,12,13,13,13,11,11,10,8,8,7,7,6,5,4,-3,1,3,3,3,3,3,3,3,3,3,3,3,5,6,8,11,12,14,16,15,14,13,13,11,10,10,9,8,8,7,6,-3,1,3,3,3,3,3,3,3,3,3,3,3,5,7,8,12,14,15,17,16,16,15,14,13,12,12,10,9,9,8,8,1,2,3,3,3,3,3,3,3,3,3,3,3,5,7,9,13,15,17,19,18,17,16,15,14,13,12,12,11,10,9,9,5,4,3,3,3,3,3,3,3,3,3,3,3,5,7,9,13,15,17,18,18,17,16,16,14,13,12,11,11,11,10,9,7,4,3,3,3,3,3,3,3,3,3,3,3,5,7,9,13,15,17,18,18,17,16,15,14,13,12,11,10,10,9,8,6,5,4,3,3,3,3,3,3,3,3,3,3,5,7,8,12,14,16,17,16,16,14,14,13,11,11,10,9,8,7,7,3,3,3,3,3,3,3,3,3,3,3,3,3,5,6,8,11,12,13,14,13,13,12,11,10,9,8,7,6,6,4,4,0,1,2,3,3,3,3,3,3,3,3,3,3,4,5,6,8,9,10,11,10,9,9,7,6,6,4,3,3,2,1,0,-1,0,2,3,3,3,3,3,3,3,3,3,3,4,4,5,6,7,7,7,6,5,5,4,2,1,1,0,-2,-1,-3,-4,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,3,3,3,1,0,0,-2,-3,-3,-4,-5,-6,-7,-8,5,4,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,1,0,-1,-1,-2,-3,-4,-5,-6,-8,-8,-9,-10,-11,-12,9,6,4,3,3,2,1,1,1,0,0,-1,-1,-1,-2,-2,-4,-4,-5,-6,-6,-6,-7,-8,-8,-9,-10,-11,-11,-12,-13,-14,13,8,5,4,3,2,0,-1,-1,-2,-3,-4,-5,-5,-6,-6,-8,-8,-9,-10,-11,-10,-10,-10,-11,-11,-11,-12,-13,-13,-14,-15,10,6,3,1,-1,-3,-4,-5,-7,-8,-9,-9,-10,-11,-12,-12,-12,-13,-13,-13,-13,-13,-12,-11,-12,-12,-13,-13,-14,-15,-16,-15,3,0,-4,-5,-8,-9,-10,-12,-13,-14,-15,-15,-15,-15,-15,-15,-15,-15,-14,-14,-13,-13,-12,-12,-13,-14,-14,-15,-15,-16,-17,-16,-4,-7,-9,-11,-13,-15,-16,-17,-18,-19,-19,-20,-20,-19,-18,-18,-17,-16,-15,-14,-13,-13,-13,-14,-15,-15,-16,-16,-16,-16,-17,-17,-10,-12,-14,-15,-17,-18,-19,-19,-20,-20,-20,-19,-18,-17,-16,-15,-14,-14,-13,-13,-13,-14,-16,-17,-18,-18,-18,-18,-18,-18,-18,-18,-15,-15,-16,-18,-19,-19,-20,-20,-19,-19,-18,-17,-16,-15,-14,-13,-13,-13,-14,-15,-16,-18,-19,-20,-21,-21,-20,-20,-19,-19,-19,-18,-18,-18,-19,-20,-20,-20,-19,-18,-18,-17,-16,-14,-14,-13,-13,-13,-14,-15,-17,-18,-20,-22,-23,-24,-24,-23,-22,-21,-21,-20,-20,-19,-20,-20,-20,-19,-19,-18,-17,-16,-15,-14,-14,-13,-13,-14,-15,-16,-19,-19,-21,-23,-24,-25,-26,-26,-26,-25,-24,-23,-23,-23,-22,-21,-20,-20,-19,-18,-17,-16,-14,-14,-13,-13,-13,-14,-15,-17,-18,-20,-23,-24,-25,-26,-27,-27,-28,-28,-27,-27,-26,-25,-25,-25,-24,-24,-19,-18,-16,-15,-14,-14,-13,-13,-14,-14,-16,-17,-19,-21,-23,-25,-25,-27,-27,-28,-28,-28,-28,-28,-28,-27,-27,-27,-27,-26,-27,-27,-16,-15,-14,-13,-13,-13,-14,-15,-17,-18,-20,-22,-24,-26,-27,-27,-27,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-27,-28,-28,-14,-13,-13,-14,-14,-16,-17,-19,-21,-23,-25,-26,-27,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-27,-26,-13,-14,-15,-16,-18,-20,-22,-24,-26,-27,-27,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-23,-18,-15,-17,-19,-21,-23,-25,-26,-27,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-42,-31,3,33,-19,-22,-24,-25,-27,-27,-28,-28,-29,-29,-29,-29,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-31,-10,32,57,-25,-27,-28,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-29,-25,1,27,48,57,-29,-30,-31,-31,-31,-30,-30,-30,-30,-30,-30,-30,-29,-29,-29,-29,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-29,-21,32,59,60,54});
		coefArray.add(new int[]{0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,2,3,3,3,4,4,4,4,4,4,1,1,0,0,2,5,5,5,6,7,7,8,8,9,9,8,3,2,1,0,5,9,9,10,11,12,13,14,13,12,12,11,6,4,3,2,5,8,8,9,10,11,12,12,12,11,10,9,6,5,3,3,6,8,8,9,10,10,11,11,10,9,8,7,6,5,4,3,5,6,6,7,7,7,8,8,7,6,5,4,3,2,2,-3,6,5,5,6,6,6,6,6,5,4,3,2,2,2,2,-3,5,3,3,3,3,3,3,3,3,2,2,2,2,2,2,3,3,1,1,1,1,1,1,1,1,0,0,0,-2,-3,-3,-8});
		coefArray.add(new int[]{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,16,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,16,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,12,2,2,2,2,2,2,2,2,2,2,2,2,12,15,16,21});
		
		//{type(0:luma;1:chrome), width, cbf}
		typeAndWidthAndExist.add(new int[]{1, 16, 1});
		typeAndWidthAndExist.add(new int[]{1, 16, 1});
		typeAndWidthAndExist.add(new int[]{0, 32, 1});
		
		typeAndWidthAndExist.add(new int[]{1, 16, 0});
		typeAndWidthAndExist.add(new int[]{1, 16, 1});
		typeAndWidthAndExist.add(new int[]{0, 32, 1});
		
		typeAndWidthAndExist.add(new int[]{1, 16, 1});
		typeAndWidthAndExist.add(new int[]{1, 16, 1});
		typeAndWidthAndExist.add(new int[]{0, 32, 1});
		
		typeAndWidthAndExist.add(new int[]{1, 16, 1});
		typeAndWidthAndExist.add(new int[]{1, 16, 1});
		typeAndWidthAndExist.add(new int[]{0, 32, 1});
		
		
		
		try{
			TEncSbac sbac = new TEncSbac();
			//BufferedWriter bw = new BufferedWriter(new FileWriter(new File("64-64-output-sequence.txt")));
			sbac.m_pcBinIf = new EntropyEncoderHevc(State.m_contextState_0, State.m_fifo);
			
			TEncSbac.m_pcBinIf.encodeBin(1, 185);
			TEncSbac.m_pcBinIf.encodeBin(1, 8);
			TEncSbac.m_pcBinIf.encodeBin(1, 13);
			TEncSbac.m_pcBinIf.encodeBinEP(1);
			TEncSbac.m_pcBinIf.encodeBinEP(0);
			TEncSbac.m_pcBinIf.encodeBin(0, 14);
			TEncSbac.m_pcBinIf.encodeBin(1, 33);
			TEncSbac.m_pcBinIf.encodeBin(1, 33);
			
			for(int i=0;i<4;i++){
				for(int j=0;j<3;j++){
					int tmp = i*3+j;
					TEncSbac.m_pcBinIf.encodeBin(typeAndWidthAndExist.get(tmp)[2], typeAndWidthAndExist.get(tmp)[0]==0 ? 28:34);
				}
				for(int j=0;j<3;j++){
					int tmp = i*3+j;
					int tmp1 = i*3 + (j + 2)%3;
					
					if(typeAndWidthAndExist.get(tmp1)[2] != 0){
						sbac.codeCoeffNxN(coefArray.get(tmp), typeAndWidthAndExist.get(tmp1)[0]);
					}
				}
			}
			TEncSbac.m_pcBinIf.encodeBinTrm(1);
			
			//bw.close();
		}catch(Exception ex){
			ex.printStackTrace();
		}
			
	}
	
}
